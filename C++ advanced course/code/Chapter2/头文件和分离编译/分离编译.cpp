
// 分离编译指一个程序(项目)由若干个源文件共同实现，而每个源文件单独编译生成
// 目标文件，最后将所有目标文件链接起来形成单一的可执行文件。
// 这就涉及到不同的模块(源文件)定义的函数和变量之间的相互调用的问题。C/C++
// 所采用的方法是：只要给出函数原型(或外部变量声明)，就可以在本源文件中使用
// 该函数(或变量),每个源文件都是一个独立的编译单元，在本源文件中使用但未在
// 此定义的变量或函数，就假设在其它源文件中定义好了

// 理解分离编译模式，要注意几点：
// 每个函数或者外部变量只能够被定义一次，但可以被多次声明

#include <iostream>

// func()被声明多次，但并不影响程序的正常编译和运行，其实这正是C++分离编译
// 模式的特点之一。
void func();

void func();

void func() { std::cout << "This is a demo" << std::endl; }


int main()
{
	func();

	system("pause");
	return 0;
}
