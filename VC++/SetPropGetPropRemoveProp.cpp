在windows界面设计中，我们和窗口的接触比较多，但是这三个api接口却很少用到，
即：SetProp、GetProp、RemoveProp这三个API接口，实际上这三个API接口是和窗口句柄
关联起来的，这个非常重要，因为他们可以给窗口设置添加、删除新属性，这就扩展了窗口
的关联数据，使得我们可以把任何数据关联到窗口上，在设计一些界面架构上则可以用到
这些接口，直接把窗口句柄和对象关联起来，把对窗口过程的处理转换成了对象事件的处理，
对面向对象的变成更加的符合逻辑性，在Delphi的框架VCL框架上就是采用了这种方法，
使得Delphi在界面开发上非常的高效，当然性能上要比MFC低，但是MFC牺牲了更加合理的
事件处理方式，更多的都是在窗口过程中处理事件，使得MFC设计界面相对困难些了

SetProp的作用是让系统给你的窗口额外分配一定的空间，用来存储一些你自己定义的数据。
打个比方，这就好比是银行的保险箱（Windows显然比银行大方得多，这个是不收费的），
第一个参数HWND hWnd指定了在哪家银行，第二个参数LPCSTR lpString指定了是哪个保险箱，
至于第三个参数HANDLE hData则是你要存放的东西。调用SetProp之后，系统就把你提交的
那个hData帮你保存起来了，如果某个时候你想要用了，就用GetProp再取出来。如同银行
一样，系统是不会管你交给他保存的是什么东西、有什么用处的，它只限定你交给它的
东西的体积不能超过保险箱的尺寸，至于怎么使用是你自己的事情。既然SetProp的第三个
参数是HANDLE（被定义为void *，在32位系统中占用4字节，在64位系统中占用8字节），
那么无论你要存的东西是什么，只要占用的字节数不超过sizeof(HANDLE)，就可以设法
强制转换成HANDLE放进去。如果你要存的东西却是大于sizeof(HANDLE)（比如32位系统下
你想存一个double），那你只有自己另开一块内存来存放，然后把指向这块内存的指针
传进去了。实际上，你的那个例子中的SetProp(hWnd, DOUBLE_EDIT_PROP_NAME, this)
就是这么做的。